/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectodeportivo;

/**
 *
 * @author HP
 */
public class GrafosEquipos extends javax.swing.JFrame {
  private Grafo grafo;

    /**
     * Creates new form GrafosEquipos
     */
    /**
     * Creates new form GrafosEquipos
     */
    public GrafosEquipos() {
        initComponents();
        inicializarGrafo();
    }

    // Clase Nodo que representa un equipo
    private class Nodo {
        String nombre;
        Nodo siguiente;

        public Nodo(String nombre) {
            this.nombre = nombre;
            this.siguiente = null;
        }
    }

    // Clase Grafo que representa el grafo de equipos
    private class Grafo {
        Nodo[] equipos;
        int[][] matrizAdyacencia;
        int numEquipos;
         public Grafo(int maxEquipos) {
            equipos = new Nodo[maxEquipos];
            matrizAdyacencia = new int[maxEquipos][maxEquipos];
            numEquipos = 0;

            // Inicializar la matriz de adyacencia
            for (int i = 0; i < maxEquipos; i++) {
                for (int j = 0; j < maxEquipos; j++) {
                    matrizAdyacencia[i][j] = 0;
                }
            }
        }
         public void agregarEquipo(String nombre) {
            equipos[numEquipos++] = new Nodo(nombre);
        }

        public void agregarPartido(int i, int j) {
            matrizAdyacencia[i][j] = 1;
            matrizAdyacencia[j][i] = 1; // Grafo no dirigido
        }

        public String mostrarGrafo() {
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < numEquipos; i++) {
                sb.append(equipos[i].nombre).append(" está conectado con: ");
                for (int j = 0; j < numEquipos; j++) {
                    if (matrizAdyacencia[i][j] == 1) {
                        sb.append(equipos[j].nombre).append(" ");
                    }
                }
                sb.append("\n");
                 }
            return sb.toString();
        }
    }
    
    // Método para inicializar el grafo con datos de ejemplo
    private void inicializarGrafo() {
        grafo = new Grafo(4); // Supongamos que hay hasta 4 equipos

        // Agregar equipos
        grafo.agregarEquipo("Equipo A");
        grafo.agregarEquipo("Equipo B");
        grafo.agregarEquipo("Equipo C");
        grafo.agregarEquipo("Equipo D");

        // Agregar partidos (conexiones entre equipos)
        grafo.agregarPartido(0, 1); // Equipo A vs Equipo B
        grafo.agregarPartido(1, 2); // Equipo B vs Equipo C
        grafo.agregarPartido(2, 3); // Equipo C vs Equipo D
        grafo.agregarPartido(3, 0); // Equipo D vs Equipo A
    }
         
         
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        MostrarGrafo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Grafo de Equipo");

        MostrarGrafo.setText("Mostrar Grafo");
        MostrarGrafo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarGrafoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(134, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MostrarGrafo))
                .addGap(129, 129, 129))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MostrarGrafo)
                .addContainerGap(183, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MostrarGrafoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarGrafoActionPerformed
       // Mostrar el grafo en un cuadro de mensaje
        String grafoRepresentacion = grafo.mostrarGrafo();
        javax.swing.JOptionPane.showMessageDialog(this, grafoRepresentacion, "Grafo de Equipos", javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_MostrarGrafoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GrafosEquipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GrafosEquipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GrafosEquipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GrafosEquipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
         //</editor-fold>
         
         
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GrafosEquipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GrafosEquipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GrafosEquipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GrafosEquipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GrafosEquipos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MostrarGrafo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
